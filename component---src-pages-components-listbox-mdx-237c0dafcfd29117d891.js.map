{"version":3,"sources":["webpack:///./node_modules/gatsby-plugin-mdx/index.js","webpack:///./node_modules/@babel/runtime/helpers/nonIterableSpread.js","webpack:///./node_modules/@babel/runtime/helpers/iterableToArray.js","webpack:///./node_modules/@babel/runtime/helpers/arrayWithoutHoles.js","webpack:///./src/pages/components/listbox.mdx","webpack:///./src/components/mdx-layout.jsx","webpack:///./node_modules/@babel/runtime/helpers/toConsumableArray.js","webpack:///./node_modules/@babel/runtime/helpers/setPrototypeOf.js","webpack:///./node_modules/@babel/runtime/helpers/arrayLikeToArray.js","webpack:///./node_modules/gatsby-plugin-mdx/mdx-renderer.js","webpack:///./node_modules/@babel/runtime/helpers/unsupportedIterableToArray.js","webpack:///./node_modules/@babel/runtime/helpers/isNativeReflectConstruct.js","webpack:///./node_modules/@babel/runtime/helpers/defineProperty.js","webpack:///./node_modules/@babel/runtime/helpers/construct.js"],"names":["MDXRenderer","require","module","exports","TypeError","iter","Symbol","iterator","Object","Array","from","arrayLikeToArray","arr","isArray","_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","frontmatter","get","pageContext","parentName","query","render","componentMetadata","propMetaData","isMDXComponent","pre","code","CodeBlock","children","renderedChildren","arrayWithoutHoles","iterableToArray","unsupportedIterableToArray","nonIterableSpread","_setPrototypeOf","o","p","setPrototypeOf","__proto__","len","length","i","arr2","React","useMDXComponents","mdx","useMDXScope","scope","mdxComponents","mdxScope","End","fullScope","keys","values","key","fn","minLen","n","prototype","toString","call","slice","constructor","name","test","Reflect","construct","sham","Proxy","Date","e","obj","value","defineProperty","enumerable","configurable","writable","isNativeReflectConstruct","_construct","Parent","args","Class","a","push","apply","instance","Function","bind","arguments"],"mappings":"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","file":"component---src-pages-components-listbox-mdx-237c0dafcfd29117d891.js","sourcesContent":["/**\n * Welcome to gatsby-plugin-mdx!\n *\n * Start reading in gatsby-node.js\n */\n\nconst MDXRenderer = require(`./mdx-renderer`)\n\nmodule.exports = {\n  MDXRenderer: MDXRenderer,\n}\n","function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\nmodule.exports = _nonIterableSpread;","function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter);\n}\n\nmodule.exports = _iterableToArray;","var arrayLikeToArray = require(\"./arrayLikeToArray\");\n\nfunction _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}\n\nmodule.exports = _arrayWithoutHoles;","import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/travis/build/edx/paragon/www/src/components/mdx-layout.jsx\";\nimport { StaticQuery, graphql } from 'gatsby';\nimport get from 'lodash/get';\nimport { ListBox } from '~paragon-react';\nimport PropsTable from '../../components/PropsTable';\nimport SingleComponentStatus from '../../components/SingleComponentStatus';\nexport const _frontmatter = {};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n    <h1>{`ListBox`}</h1>\n    <SingleComponentStatus frontmatter={get(props, 'pageContext.frontmatter') ? props.pageContext.frontmatter : null} mdxType=\"SingleComponentStatus\" />\n    <h5>{`basic usage`}</h5>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\",\n        \"metastring\": \"live\",\n        \"live\": true\n      }}>{`<ListBox>\n  <ListBoxOption>\n    Apple\n  </ListBoxOption>\n  <ListBoxOption>\n    Orange\n  </ListBoxOption>\n  <ListBoxOption>\n    Strawberry\n  </ListBoxOption>\n  <ListBoxOption>\n    Banana\n  </ListBoxOption>\n</ListBox>\n`}</code></pre>\n    <h5>{`using tag prop`}</h5>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\",\n        \"metastring\": \"live\",\n        \"live\": true\n      }}>{`<React.Fragment>\n  <div>This is an ordered list!</div>\n  <ListBox tag=\"ol\">\n    <ListBoxOption tag=\"li\">\n      Apple\n    </ListBoxOption>\n    <ListBoxOption tag=\"li\">\n      <div>Orange</div>\n    </ListBoxOption>\n    <ListBoxOption tag=\"li\">\n      Strawberry\n    </ListBoxOption>\n    <ListBoxOption tag=\"li\">\n      Banana\n    </ListBoxOption>\n  </ListBox>\n</React.Fragment>\n`}</code></pre>\n    <h5>{`using onSelect prop`}</h5>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\",\n        \"metastring\": \"live\",\n        \"live\": true\n      }}>{`class ListBoxWrapperForOnSelect extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.onSelect = this.onSelect.bind(this);\n\n    this.state = {\n      selectedOption: null,\n      selectedOptionIndex: null,\n    };\n\n    this.fruits = {\n      Apple: '🍎',\n      Orange: '🍊',\n      Strawberry: '🍓',\n      Banana: '🍌',\n    };\n  }\n\n  onSelect(option, index) {\n    this.setState({\n      selectedOption: option,\n      selectedOptionIndex: index,\n    });\n  }\n\n  getSelectedFruitEmoji(fruit) {\n    return fruit ? this.fruits[fruit] : '';\n  }\n\n  render() {\n    const children = Object.keys(this.fruits).map((fruit, index) => (\n      <ListBoxOption\n        key={fruit}\n        onSelect={() => this.onSelect(fruit, index)}\n        style={{ textAlign: 'center' }}\n      >\n        {fruit}\n      </ListBoxOption>\n    ));\n\n    return (\n      <React.Fragment>\n        <span aria-live=\"polite\">\n          Selected Fruit:\n          {this.state.selectedOptionIndex === undefined ? (\n            <span className=\"sr-only\">none</span>\n          ) : (\n            <span\n              arialabelledby={\\`list-box-option-\\${\n                this.state.selectedOptionIndex\n              }\\`}\n            >\n              {this.getSelectedFruitEmoji(this.state.selectedOption)}\n            </span>\n          )}\n        </span>\n        <ListBox style={{ width: '200px' }}>\n          {children}\n        </ListBox>\n      </React.Fragment>\n    );\n  }\n}\n`}</code></pre>\n    <h5>{`using selectedOptionIndex prop`}</h5>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\",\n        \"metastring\": \"live\",\n        \"live\": true\n      }}>{`class ListBoxWrapperForSelectedOptionIndex extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.onSelect = this.onSelect.bind(this);\n    this.onButtonClick = this.onButtonClick.bind(this);\n\n    this.state = {\n      reset: true,\n    };\n\n    this.fruits = Object.keys({\n      Apple: '🍎',\n      Orange: '🍊',\n      Strawberry: '🍓',\n      Banana: '🍌',\n    });\n  }\n\n  onButtonClick() {\n    this.setState({\n      reset: true,\n    });\n  }\n\n  onSelect() {\n    this.setState({\n      reset: false,\n    });\n  }\n\n  render() {\n    const children = this.fruits.map(fruit => (\n      <ListBoxOption\n        key={fruit}\n        onSelect={this.onSelect}\n        style={{ textAlign: 'center' }}\n      >\n        {fruit}\n      </ListBoxOption>\n    ));\n\n    return (\n      <React.Fragment>\n        <Button variant=\"primary\" onClick={this.onButtonClick}>\n          Click me to reset your selected fruit!\n        </Button>\n        <ListBox\n          selectedOptionIndex={this.state.reset ? null : undefined}\n          style={{ margin: '10px' }}\n        >\n          {children}\n        </ListBox>\n      </React.Fragment>\n    );\n  }\n}\n`}</code></pre>\n    <h5>{`Props`}</h5>\n    <StaticQuery query={graphql`\n    query {\n      componentMetadata(displayName: { eq: \"ListBox\" }) {\n        ...ComponentDocGenData\n      }\n    }\n  `} render={({\n      componentMetadata\n    }) => {\n      if (componentMetadata == null) return null;\n      return <PropsTable propMetaData={componentMetadata.props} mdxType=\"PropsTable\" />;\n    }} mdxType=\"StaticQuery\" />\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      ","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { MDXRenderer as InternalMDXRenderer } from \"gatsby-plugin-mdx\";\nimport { MDXProvider } from '@mdx-js/react';\nimport CodeBlock from './CodeBlock';\n\nimport '../scss/index.scss';\n\nconst components = {\n  pre: props => <div {...props} />,\n  code: CodeBlock,\n};\n\nexport const MDXRenderer = ({ children }) => {\n  let renderedChildren = children;\n\n  if (typeof renderedChildren === 'string') {\n    renderedChildren = <InternalMDXRenderer>{children}</InternalMDXRenderer>;\n  }\n\n  return (\n    <MDXProvider\n      components={components}\n    >\n      {renderedChildren}\n    </MDXProvider>\n  );\n};\n\nMDXRenderer.propTypes = {\n  children: PropTypes.oneOfType([PropTypes.string, PropTypes.node]).isRequired,\n};\n\nexport default props => (\n  <div>\n    <MDXRenderer>{props.children}</MDXRenderer>{/* eslint-disable-line react/prop-types */}\n  </div>\n);\n","var arrayWithoutHoles = require(\"./arrayWithoutHoles\");\n\nvar iterableToArray = require(\"./iterableToArray\");\n\nvar unsupportedIterableToArray = require(\"./unsupportedIterableToArray\");\n\nvar nonIterableSpread = require(\"./nonIterableSpread\");\n\nfunction _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}\n\nmodule.exports = _toConsumableArray;","function _setPrototypeOf(o, p) {\n  module.exports = _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}\n\nmodule.exports = _setPrototypeOf;","function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}\n\nmodule.exports = _arrayLikeToArray;","const React = require(`react`)\nconst { useMDXComponents, mdx } = require(`@mdx-js/react`)\nconst { useMDXScope } = require(`./context`)\n\nmodule.exports = function MDXRenderer({\n  scope,\n  components,\n  children,\n  ...props\n}) {\n  const mdxComponents = useMDXComponents(components)\n  const mdxScope = useMDXScope(scope)\n\n  // Memoize the compiled component\n  const End = React.useMemo(() => {\n    if (!children) {\n      return null\n    }\n\n    const fullScope = {\n      // React is here just in case the user doesn't pass them in\n      // in a manual usage of the renderer\n      React,\n      mdx,\n      ...mdxScope,\n    }\n\n    const keys = Object.keys(fullScope)\n    const values = keys.map(key => fullScope[key])\n    const fn = new Function(`_fn`, ...keys, `${children}`)\n\n    return fn({}, ...values)\n  }, [children, scope])\n\n  return React.createElement(End, { components: mdxComponents, ...props })\n}\n","var arrayLikeToArray = require(\"./arrayLikeToArray\");\n\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}\n\nmodule.exports = _unsupportedIterableToArray;","function _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n\n  try {\n    Date.prototype.toString.call(Reflect.construct(Date, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\nmodule.exports = _isNativeReflectConstruct;","function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nmodule.exports = _defineProperty;","var setPrototypeOf = require(\"./setPrototypeOf\");\n\nvar isNativeReflectConstruct = require(\"./isNativeReflectConstruct\");\n\nfunction _construct(Parent, args, Class) {\n  if (isNativeReflectConstruct()) {\n    module.exports = _construct = Reflect.construct;\n  } else {\n    module.exports = _construct = function _construct(Parent, args, Class) {\n      var a = [null];\n      a.push.apply(a, args);\n      var Constructor = Function.bind.apply(Parent, a);\n      var instance = new Constructor();\n      if (Class) setPrototypeOf(instance, Class.prototype);\n      return instance;\n    };\n  }\n\n  return _construct.apply(null, arguments);\n}\n\nmodule.exports = _construct;"],"sourceRoot":""}