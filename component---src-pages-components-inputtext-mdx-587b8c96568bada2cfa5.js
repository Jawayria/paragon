(window.webpackJsonp=window.webpackJsonp||[]).push([[29],{"A2+M":function(e,n,t){var a=t("X8hv");e.exports={MDXRenderer:a}},Bnag:function(e,n){e.exports=function(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}},EbDI:function(e,n){e.exports=function(e){if("undefined"!=typeof Symbol&&Symbol.iterator in Object(e))return Array.from(e)}},Ijbi:function(e,n,t){var a=t("WkPL");e.exports=function(e){if(Array.isArray(e))return a(e)}},KcSJ:function(e,n,t){"use strict";var a=t("q1tI"),r=t.n(a),l=t("A2+M"),u=t("7ljp"),i=t("MhRC"),o=(t("hZTp"),{pre:function(e){return r.a.createElement("div",e)},code:i.a}),p=function(e){var n=e.children,t=n;return"string"==typeof t&&(t=r.a.createElement(l.MDXRenderer,null,n)),r.a.createElement(u.MDXProvider,{components:o},t)};n.a=function(e){return r.a.createElement("div",null,r.a.createElement(p,null,e.children))}},RIqP:function(e,n,t){var a=t("Ijbi"),r=t("EbDI"),l=t("ZhPi"),u=t("Bnag");e.exports=function(e){return a(e)||r(e)||l(e)||u()}},SksO:function(e,n){function t(n,a){return e.exports=t=Object.setPrototypeOf||function(e,n){return e.__proto__=n,e},t(n,a)}e.exports=t},WkPL:function(e,n){e.exports=function(e,n){(null==n||n>e.length)&&(n=e.length);for(var t=0,a=new Array(n);t<n;t++)a[t]=e[t];return a}},X8hv:function(e,n,t){var a=t("sXyB"),r=t("RIqP"),l=t("lSNA"),u=t("8OQS");function i(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,a)}return t}function o(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?i(Object(t),!0).forEach((function(n){l(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}var p=t("q1tI"),s=t("7ljp"),c=s.useMDXComponents,m=s.mdx,d=t("BfwJ").useMDXScope;e.exports=function(e){var n=e.scope,t=e.components,l=e.children,i=u(e,["scope","components","children"]),s=c(t),b=d(n),f=p.useMemo((function(){if(!l)return null;var e=o({React:p,mdx:m},b),n=Object.keys(e),t=n.map((function(n){return e[n]}));return a(Function,["_fn"].concat(r(n),[""+l])).apply(void 0,[{}].concat(r(t)))}),[l,n]);return p.createElement(f,o({components:s},i))}},ZhPi:function(e,n,t){var a=t("WkPL");e.exports=function(e,n){if(e){if("string"==typeof e)return a(e,n);var t=Object.prototype.toString.call(e).slice(8,-1);return"Object"===t&&e.constructor&&(t=e.constructor.name),"Map"===t||"Set"===t?Array.from(e):"Arguments"===t||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t)?a(e,n):void 0}}},b48C:function(e,n){e.exports=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Date.prototype.toString.call(Reflect.construct(Date,[],(function(){}))),!0}catch(e){return!1}}},lSNA:function(e,n){e.exports=function(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}},sXyB:function(e,n,t){var a=t("SksO"),r=t("b48C");function l(n,t,u){return r()?e.exports=l=Reflect.construct:e.exports=l=function(e,n,t){var r=[null];r.push.apply(r,n);var l=new(Function.bind.apply(e,r));return t&&a(l,t.prototype),l},l.apply(null,arguments)}e.exports=l},yLqA:function(e,n,t){"use strict";t.r(n),t.d(n,"_frontmatter",(function(){return c})),t.d(n,"default",(function(){return b}));var a=t("zLVn"),r=(t("q1tI"),t("7ljp")),l=t("KcSJ"),u=t("Wbzz"),i=t("mwIZ"),o=t.n(i),p=t("NJaX"),s=t("BXwR"),c={},m={_frontmatter:c},d=l.a;function b(e){var n=e.components,t=Object(a.a)(e,["components"]);return Object(r.mdx)(d,Object.assign({},m,t,{components:n,mdxType:"MDXLayout"}),Object(r.mdx)("h1",null,"InputText"),Object(r.mdx)(s.a,{frontmatter:o()(t,"pageContext.frontmatter")?t.pageContext.frontmatter:null,mdxType:"SingleComponentStatus"}),Object(r.mdx)("h5",null,"minimal usage"),Object(r.mdx)("pre",null,Object(r.mdx)("code",Object.assign({parentName:"pre"},{className:"language-jsx",metastring:"live",live:!0}),'<InputText name="name" label="First Name" value="Foo Bar" />\n')),Object(r.mdx)("h5",null,"read only"),Object(r.mdx)("pre",null,Object(r.mdx)("code",Object.assign({parentName:"pre"},{className:"language-jsx",metastring:"live",live:!0}),'<InputText name="inputState" label="Input State" value="Read Only" readOnly />\n')),Object(r.mdx)("h5",null,"validation"),Object(r.mdx)("pre",null,Object(r.mdx)("code",Object.assign({parentName:"pre"},{className:"language-jsx",metastring:"live",live:!0}),'<InputText\n  id="username"\n  name="username"\n  label="Username"\n  description="The unique name that identifies you throughout the site."\n  validator={value => {\n    let feedback = { isValid: true };\n    if (value.length < 3) {\n      feedback = {\n        isValid: false,\n        validationMessage: \'Username must be at least 3 characters in length.\',\n      };\n    }\n    return feedback;\n  }}\n/>\n')),Object(r.mdx)("h5",null,"validation with danger theme"),Object(r.mdx)("pre",null,Object(r.mdx)("code",Object.assign({parentName:"pre"},{className:"language-jsx",metastring:"live",live:!0}),"<InputText\n  name=\"username\"\n  label=\"Username\"\n  description=\"The unique name that identifies you throughout the site.\"\n  validator={value => {\n    let feedback = { isValid: true };\n    if (value.length < 3) {\n      feedback = {\n        isValid: false,\n        validationMessage: 'Username must be at least 3 characters in length.',\n        dangerIconDescription: 'Error',\n      };\n    }\n    return feedback;\n  }}\n  themes={['danger']}\n/>\n")),Object(r.mdx)("h5",null,"label as element"),Object(r.mdx)("pre",null,Object(r.mdx)("code",Object.assign({parentName:"pre"},{className:"language-jsx",metastring:"live",live:!0}),'<InputText\n  name="username"\n  label={<span lang="en">Element</span>}\n  value="Label is wrapped in language span"\n/>\n')),Object(r.mdx)("h5",null,"focus test"),Object(r.mdx)("pre",null,Object(r.mdx)("code",Object.assign({parentName:"pre"},{className:"language-jsx",metastring:"live",live:!0}),'class FocusInputWrapper extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { open: true };\n\n    this.resetStatusAlertWrapperState = this.resetStatusAlertWrapperState.bind(\n      this,\n    );\n  }\n\n  resetStatusAlertWrapperState() {\n    this.setState({ open: false });\n    this.inputForm.focus();\n  }\n\n  render() {\n    return (\n      <div>\n        <StatusAlert\n          alertType="info"\n          open={this.state.open}\n          dialog="Close me to input data!"\n          onClose={this.resetStatusAlertWrapperState}\n        />\n        <InputText\n          id="data"\n          name="data"\n          label="Data Input"\n          inputRef={input => {\n            this.inputForm = input;\n          }}\n        />\n      </div>\n    );\n  }\n}\n')),Object(r.mdx)("h5",null,"different textual input types"),Object(r.mdx)("pre",null,Object(r.mdx)("code",Object.assign({parentName:"pre"},{className:"language-jsx",metastring:"live",live:!0}),'<form>\n  <InputText\n    name="search"\n    label="Search"\n    value="what is paragon"\n    type="search"\n    id="input-search"\n  />\n  <InputText\n    name="email"\n    label="Email"\n    value="paragon@edx.org"\n    type="email"\n    id="input-email"\n  />\n  <InputText\n    name="url"\n    label="Url"\n    value="https://edx.github.io/paragon"\n    type="url"\n    id="input-url"\n  />\n  <InputText\n    name="telephone"\n    label="Telephone"\n    value="1-(555)-555-5555"\n    type="tel"\n    id="input-tel"\n  />\n  <InputText\n    name="password"\n    label="Password"\n    value="hunter2"\n    type="password"\n    id="input-password"\n  />\n  <InputText\n    name="number"\n    label="Number"\n    value={42}\n    type="number"\n    id="input-number"\n  />\n  <InputText\n    name="datetime-local"\n    label="Date and time"\n    value="2017-04-27T13:45:00"\n    type="datetime-local"\n    id="input-datetime-local"\n  />\n  <InputText\n    name="date"\n    label="Date"\n    value="2017-04-27"\n    type="date"\n    id="input-date"\n  />\n  <InputText\n    name="month"\n    label="Month"\n    value="2017-04"\n    type="month"\n    id="input-month"\n  />\n  <InputText\n    name="week"\n    label="Week"\n    value="2017-W33"\n    type="week"\n    id="input-week"\n  />\n  <InputText\n    name="time"\n    label="Time"\n    value="13:45:00"\n    type="time"\n    id="input-time"\n  />\n  <InputText\n    name="color"\n    label="Color"\n    value="#BF472C"\n    type="color"\n    id="input-color"\n  />\n</form>\n')),Object(r.mdx)("h5",null,"price with step"),Object(r.mdx)("pre",null,Object(r.mdx)("code",Object.assign({parentName:"pre"},{className:"language-jsx",metastring:"live",live:!0}),'<InputText\n  name="price"\n  label="Price"\n  type="number"\n  value={3.5}\n  min={0}\n  step={0.01}\n/>\n')),Object(r.mdx)("h5",null,"displayed inline"),Object(r.mdx)("pre",null,Object(r.mdx)("code",Object.assign({parentName:"pre"},{className:"language-jsx",metastring:"live",live:!0}),'<InputText name="username" label="Username" value="foobar" inline />\n')),Object(r.mdx)("h5",null,"with input group addons"),Object(r.mdx)("pre",null,Object(r.mdx)("code",Object.assign({parentName:"pre"},{className:"language-jsx",metastring:"live",live:!0}),'<form>\n  <InputText\n    name="username"\n    label="Username"\n    value="foobar"\n    inputGroupPrepend={<div className="input-group-text">{\'@\'}</div>}\n  />\n  <InputText\n    name="username"\n    label="Username"\n    value="foobar"\n    inputGroupAppend={<div className="input-group-text">{\'@example.com\'}</div>}\n  />\n  <InputText\n    name="money"\n    label="Money"\n    type="number"\n    value={1000}\n    inputGroupPrepend={<div className="input-group-text">{\'$\'}</div>}\n    inputGroupAppend={<div className="input-group-text">{\'.00\'}</div>}\n  />\n  <InputText\n    name="search"\n    label="Search"\n    value="what is paragon"\n    inputGroupAppend={(\n      <Button variant="outline-secondary">Go</Button>\n    )}\n  />\n  <InputText\n    name="username"\n    label="Username"\n    value="foobar"\n    inputGroupAppend={[\n      <div className="input-group-text">\n        <Icon\n          id="checkmark"\n          className="fa fa-check"\n          screenReaderText="Checkmark"\n        />\n      </div>,\n      <Button variant="outline-secondary">Go</Button>,\n    ]}\n  />\n  <InputText\n    name="password"\n    label="Password"\n    value="secret"\n    inputGroupAppend={\n      <div className="input-group-text">\n        <Icon\n          id="checkmark"\n          className="fa fa-check"\n          screenReaderText="Checkmark"\n        />\n      </div>\n    }\n  />\n</form>\n')),Object(r.mdx)("h5",null,"Props"),Object(r.mdx)(u.StaticQuery,{query:"3284070069",render:function(e){var n=e.componentMetadata;return null==n?null:Object(r.mdx)(p.a,{propMetaData:n.props,mdxType:"PropsTable"})},mdxType:"StaticQuery"}))}b.isMDXComponent=!0}}]);
//# sourceMappingURL=component---src-pages-components-inputtext-mdx-587b8c96568bada2cfa5.js.map