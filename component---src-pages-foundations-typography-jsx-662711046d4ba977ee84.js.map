{"version":3,"sources":["webpack:///./src/components/MeasuredItem.jsx","webpack:///./src/pages/foundations/typography.jsx"],"names":["MeasuredItem","props","initialMeasurements","properties","reduce","acc","property","state","item","React","createRef","componentDidMount","setTimeout","this","measure","bind","computedStyle","getComputedStyle","current","measurements","getPropertyValue","setState","render","Fragment","renderBefore","cloneElement","children","ref","renderAfter","Component","defaultProps","undefined","weightLabels","200","300","400","500","600","700","800","measuredTypeProps","fontFamily","split","weight","className","title","colSpan","map","headingSize","style","maxWidth"],"mappings":"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","file":"component---src-pages-foundations-typography-jsx-662711046d4ba977ee84.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nexport default class MeasuredItem extends React.Component {\n  constructor(props) {\n    super(props);\n\n    const initialMeasurements = props.properties\n      .reduce((acc, property) => {\n        acc[property] = null;\n        return acc;\n      }, {});\n\n    this.state = initialMeasurements;\n    this.item = React.createRef();\n  }\n\n  componentDidMount() {\n    // Needs a moment to render children to DOM first.\n    setTimeout(this.measure.bind(this), 10);\n  }\n\n  measure() {\n    const computedStyle = getComputedStyle(this.item.current);\n    const measurements = this.props.properties\n      .reduce((acc, property) => {\n        acc[property] = computedStyle.getPropertyValue(property);\n        return acc;\n      }, {});\n\n    this.setState(measurements);\n  }\n\n  render() {\n    return (\n      <React.Fragment>\n        {this.props.renderBefore ? this.props.renderBefore(this.state) : null}\n        {React.cloneElement(this.props.children, { ref: this.item })}\n        {this.props.renderAfter ? this.props.renderAfter(this.state) : null}\n      </React.Fragment>\n    );\n  }\n}\n\nMeasuredItem.propTypes = {\n  properties: PropTypes.arrayOf(PropTypes.string),\n  renderBefore: PropTypes.func,\n  renderAfter: PropTypes.func,\n  children: PropTypes.node.isRequired,\n};\n\nMeasuredItem.defaultProps = {\n  properties: [],\n  renderBefore: undefined,\n  renderAfter: undefined,\n};\n\n","import React from 'react';\nimport SEO from '../../components/seo';\nimport MeasuredItem from '../../components/MeasuredItem';\n\n\nconst weightLabels = {\n  200: 'Light',\n  300: 'Light',\n  400: 'Regular',\n  500: 'Medium',\n  600: 'Medium',\n  700: 'Bold',\n  800: 'Black',\n};\n\nconst measuredTypeProps = {\n  properties: ['font-size', 'line-height', 'font-family', 'font-weight'],\n  renderAfter: (measurements) => {\n    const fontFamily = measurements['font-family'] ?\n      measurements['font-family'].split(',')[0] : null;\n    const weight = weightLabels[measurements['font-weight']];\n\n    return (\n      <p className=\"m-0 text-muted\">\n        <span className=\"mr-2\">\n          {fontFamily} {weight}\n        </span>\n        {measurements['font-size']} / {measurements['line-height']}\n      </p>\n    );\n  },\n};\n\n\nexport default function () {\n  return (\n    <div>\n      <SEO title=\"Typography\" />\n\n      <h1>Typography</h1>\n\n      <table className=\"w-100 table pgn-doc__status-table\">\n        <tbody>\n          <tr>\n            <th colSpan=\"3\">\n              <h2>Headings</h2>\n              <p className=\"font-weight-normal\">Headings all share a line-height of 1.25em</p>\n            </th>\n          </tr>\n          <tr>\n            <th>Desktop</th>\n            <th>Mobile</th>\n            <th>CSS Class</th>\n          </tr>\n          {[1, 2, 3, 4, 5, 6].map(headingSize => (\n            <tr>\n              <td>\n                <MeasuredItem {...measuredTypeProps}>\n                  <p className={`m-0 h${headingSize}`}>Header {headingSize}</p>\n                </MeasuredItem>\n              </td>\n              <td className=\"mobile-type\">\n                <MeasuredItem {...measuredTypeProps}>\n                  <p className={`m-0 h${headingSize}`}>Header {headingSize}</p>\n                </MeasuredItem>\n              </td>\n              <td>\n                <code>.h{headingSize}</code>\n              </td>\n            </tr>\n          ))}\n        </tbody>\n        <tbody>\n          <tr>\n            <th colSpan=\"3\">\n              <h2>Body</h2>\n              <p className=\"font-weight-normal\">Body text line-heights are 1.5em</p>\n            </th>\n          </tr>\n          <tr>\n            <th colSpan=\"2\">Desktop & Mobile</th>\n            <th>CSS Class</th>\n          </tr>\n          <tr>\n            <td colSpan=\"2\">\n              <MeasuredItem {...measuredTypeProps}>\n                <p className=\"lead m-0\">Large Body</p>\n              </MeasuredItem>\n            </td>\n            <td>\n              <code>.lead</code>\n            </td>\n          </tr>\n          <tr>\n            <td colSpan=\"2\">\n              <MeasuredItem {...measuredTypeProps}>\n                <p className=\"m-0\">Body</p>\n              </MeasuredItem>\n            </td>\n            <td />\n          </tr>\n          <tr>\n            <td colSpan=\"2\">\n              <MeasuredItem {...measuredTypeProps}>\n                <p className=\"small m-0\">Small Body</p>\n              </MeasuredItem>\n            </td>\n            <td>\n              <code>.small</code>\n            </td>\n          </tr>\n        </tbody>\n\n        <tbody>\n          <tr>\n            <th colSpan=\"3\">\n              <h2>Forms</h2>\n              <p className=\"font-weight-normal\">Form text line-heights are the same as headings: 1.25em.</p>\n            </th>\n          </tr>\n          <tr>\n            <th colSpan=\"2\">Desktop & Mobile</th>\n            <th>CSS Class</th>\n          </tr>\n          <tr>\n            <td colSpan=\"2\">\n              <MeasuredItem {...measuredTypeProps}>\n                <label className=\"m-0\">Label</label>{/* eslint-disable-line */}\n              </MeasuredItem>\n            </td>\n            <td>\n              <small>Same as h6</small>\n            </td>\n          </tr>\n          <tr>\n            <td colSpan=\"2\">\n              <MeasuredItem {...measuredTypeProps}>\n                <p className=\"m-0\">Helper</p>\n              </MeasuredItem>\n            </td>\n            <td>\n              <small>Same as body</small>\n            </td>\n          </tr>\n          <tr>\n            <td colSpan=\"2\">\n              <MeasuredItem {...measuredTypeProps}>\n                <p className=\"small m-0\">Helper Small</p>\n              </MeasuredItem>\n            </td>\n            <td>\n              <code>.small</code><br />\n              <small>Same as small body</small>\n            </td>\n          </tr>\n        </tbody>\n      </table>\n\n\n      <table className=\"w-100 table pgn-doc__status-table\">\n        <tbody>\n          <tr>\n            <th colSpan=\"2\">\n              <h2>Decoration and Emphasis</h2>\n            </th>\n          </tr>\n          <tr>\n            <th>Style</th>\n            <th>CSS Class</th>\n          </tr>\n          <tr>\n            <td><p className=\"text-lowercase\">Lowercase text.</p></td>\n            <td><code>.text-lowercase</code></td>\n          </tr>\n          <tr>\n            <td><p className=\"text-uppercase\">uppercase text.</p></td>\n            <td><code>.text-uppercase</code></td>\n          </tr>\n          <tr>\n            <td><p className=\"text-capitalize\">capitalize text.</p></td>\n            <td><code>.text-capitalize</code></td>\n          </tr>\n          <tr>\n            <td><p className=\"text-decoration-none\">No decorations.</p></td>\n            <td><code>.text-decoration-none</code></td>\n          </tr>\n\n          <tr>\n            <td><p className=\"text-italic\">Italic text.</p></td>\n            <td><code>.text-italic</code></td>\n          </tr>\n\n          <tr>\n            <td><p className=\"font-weight-bold\">Bold text.</p></td>\n            <td><code>.font-weight-bold</code></td>\n          </tr>\n          <tr>\n            <td><p className=\"font-weight-normal\">Regular text.</p></td>\n            <td><code>.font-weight-normal</code></td>\n          </tr>\n        </tbody>\n      </table>\n\n      <table className=\"w-100 table pgn-doc__status-table\">\n        <tbody>\n          <tr>\n            <th colSpan=\"2\">\n              <h2>Alignment</h2>\n            </th>\n          </tr>\n          <tr>\n            <th>Style</th>\n            <th>CSS Class</th>\n          </tr>\n          <tr>\n            <td><p className=\"text-left\">left text.</p></td>\n            <td><code>.text-left</code></td>\n          </tr>\n          <tr>\n            <td><p className=\"text-right\">right text.</p></td>\n            <td><code>.text-right</code></td>\n          </tr>\n          <tr>\n            <td><p className=\"text-center\">center text.</p></td>\n            <td><code>.text-center</code></td>\n          </tr>\n          <tr>\n            <td>\n              <p className=\"text-justify\">justify text.</p>\n              <p className=\"text-justify text-muted small\" style={{ maxWidth: '20rem' }}>\n                At the edge of forever tendrils of gossamer clouds corpus callosum culture\n                Vangelis dispassionate extraterrestrial observer.\n              </p>\n            </td>\n            <td><code>.text-justify</code></td>\n          </tr>\n          <tr>\n            <td><p className=\"text-wrap\">wrap text.</p></td>\n            <td><code>.text-wrap</code></td>\n          </tr>\n          <tr>\n            <td><p className=\"text-nowrap\">nowrap text.</p></td>\n            <td><code>.text-nowrap</code></td>\n          </tr>\n        </tbody>\n      </table>\n    </div>\n  );\n}\n"],"sourceRoot":""}